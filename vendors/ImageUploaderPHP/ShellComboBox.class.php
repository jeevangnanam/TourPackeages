<?php

require_once ('BaseControl.class.php');

/**
 * @copyright  Aurigma Inc. 2008-2009 All rights reserved.
 * @version    1.0
 */
class ShellComboBox extends BaseControl {
	
	/**
	 * This is method ShellComboBox
	 *
	 * @param string $id This is a description
	 * @param int|string $width This is a description
	 * @param int|string $height This is a description
	 */
	function ShellComboBox($id = null, $width = null, $height = null) {
		parent::BaseControl($id, $width, $height);
	
		$this->_javaScriptWriterClassName = 'ShellComboBoxWriter';		

		$this->_init();
	}

	//>>>AUTOGENERATED
	function _init() {
		$this->_backgroundColor = $this->_backgroundColorDefaultValue;
		$this->_parentControlName = $this->_parentControlNameDefaultValue;
	}


	function _renderEvents() {
		$varName = $this->getJavaScriptWriterVariableName();
		JavaScriptUtils::renderEvent($varName, "InitComplete", $this->_clientInitComplete);
	}


	function _renderParams() {
		$varName = $this->getJavaScriptWriterVariableName();
		JavaScriptUtils::renderParam($varName, "BackgroundColor", $this->_backgroundColor, $this->_backgroundColorDefaultValue);
		JavaScriptUtils::renderParam($varName, "ParentControlName", $this->_parentControlName, $this->_parentControlNameDefaultValue);
	}


	var $_backgroundColorDefaultValue = "#ff7905";
	var $_backgroundColor;
	
	/**
	 * Background color of the shell combobox.
	 * 
	 * @return string
	 */
	function getBackgroundColor() {
		return $this->_backgroundColor;
	}
	
	/**
	 * Background color of the shell combobox.
	 * 
	 * @param string $value
	 */
	function setBackgroundColor($value) {
		$this->_backgroundColor = $value;
	}
	
	
	var $_parentControlNameDefaultValue = "";
	var $_parentControlName;
	
	/**
	 * Name of the control instance this combo box is associated with.
	 * 
	 * @return string
	 */
	function getParentControlName() {
		return $this->_parentControlName;
	}
	
	/**
	 * Name of the control instance this combo box is associated with.
	 * 
	 * @param string $value
	 */
	function setParentControlName($value) {
		$this->_parentControlName = $value;
	}


	var $_clientInitComplete = array();
	
	/**
	 * Raised when this instance of the is completely created and initialized.
	 * 
	 * @param string $clientFunction
	 */
	function addClientInitComplete($clientFunction) {
		if (!in_array($clientFunction, $this->_clientInitComplete)) {
			array_push($this->_clientInitComplete, $clientFunction);
		}
	}
	
	/**
	 * Raised when this instance of the is completely created and initialized.
	 * 
	 * @param string $clientFunction
	 */
	function removeClientInitComplete($clientFunction) {
		$key = array_search($clientFunction, $this->_clientInitComplete);
		if ($key !== false) {
			array_splice($this->_clientInitComplete, $key, 1);
		}
	}
//AUTOGENERATED<<<	
}

?>